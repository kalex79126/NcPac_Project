@model IEnumerable<NcPac_Project2.Models.Member>

@{
    ViewData["Title"] = "Members";
}


<div class="jumbotron jumbotron-fluid margin-bottom" style="background-color:#0077be; color:#fff;">
    <div class="container">
        <h1 class="display-4">Members</h1>
        <p class="lead">Manage Members</p>
    </div>
</div>
@if (TempData["Message"] != null)
{
    <div class="container">
        <div class="alert alert-success">
            <strong>Success !</strong> @TempData["Message"]
        </div>
    </div>
}
</div>
@if (TempData["ErrorMessage"] != null)
{
    <div class="container">
        <div class="alert alert-danger">
            <strong>Failed!</strong> @TempData["ErrorMessage"]
        </div>
    </div>
}
<div class="container">
    @if (User.IsInRole("Top Admin"))
    {
        <form asp-action="InsertFromExcel" asp-controller="Members" method="post" enctype="multipart/form-data">
        <div class="row">
            <div class="col-sm-4">
                
                    <div class="form-group">
                        <label class="control-label custom-file-label fileuploadtext margin-bottom">Upload Excel File:</label>
                        <div class="input-group mb-3">
                            <input type="file" class="form-control" name="theExcel" id="theExcel">
                        </div>
                    </div>
                </div>
                <div class="form-group">
                    <div class="btnboxdiv">
                        <div class="btnboxes">
                            <input type="submit" title="Upload an excel file to import data" value="Upload Data" class="btn btn-primary" />
                        </div>
                        <div class="btnboxes">
                            <a asp-action="DownloadTemplate" title="Click to download a template to fill an excel(.xlsx) sheet to add members with correct format" class="btn templatebtn">Template(.xlsx)</a>
                        </div>
                    </div>
                </div>
            </div>
        </form>
        
    }
</div>

@if (User.IsInRole("Top Admin"))
{
    <hr />
}
<div class="container">
    <form asp-action="Index" method="get">
        <input type="hidden" name="sortField" value="@ViewData["sortField"]" />
        <input type="hidden" name="sortDirection" value="@ViewData["sortDirection"]" />
        <div class="form-horizontal">
            <div class="btnboxdiv">
                <div class="btnboxes">
                    @if (User.IsInRole("Top Admin"))
                    {
                        <input type="button" value="Add New Member" title="Click to open a form to add new member" class="floatbuttonright" onclick="location.href='@Url.Action("Create", "Members")'" />
                    }
                </div>
                <div class="btnboxes">
                    @if (User.IsInRole("Top Admin"))
                    {
                        <input type="button" value="Members Report" title="Click to open a new page to create a member report" class="floatbuttonright" onclick="location.href='@Url.Action("MemberSummary", "Members")'" />
                    }
                </div>
                <div class="btnboxes">
                    <button class="onfiltering @(ViewData["FilteringData"]) " title="Click to open filters" type="button" data-bs-toggle="collapse" id="filterToggle" data-bs-target="#collapseFilter" aria-expanded="false" aria-controls="collapseFilter">
                        Filter The Records
                    </button>
                </div>
            </div>
            <div asp-validation-summary="ModelOnly" class="text-danger"></div>
            <div class="collapse" id="collapseFilter">
                <div class="card card-body bg-light">
                    <div class="row">
                        <div class="d-block d-lg-none">
                            <div class="form-group">
                                <label class="control-label">Sort By:</label>
                                <div class="input-group">
                                    <div class="input-group-prepend">
                                        <div class="input-group-text">
                                            <input type="checkbox" class="" value="desc"
                                                   @((ViewData["sortDirection"].ToString() != "asc" ? "checked=\"checked\"" : ""))
                                                   name="sortDirectionCheck" />&nbsp;&nbsp;Descending
                                        </div>
                                    </div>
                                    <select name="sortFieldID" class="form-control" asp-items="ViewBag.sortFieldID"></select>
                                </div>
                            </div>
                        </div>
                        <div class="form-group col-md-4">
                            <label class="control-label">Search Last Name:</label>
                            @Html.TextBox("SearchLast", null, new { @class = "form-control"})
                        </div>
                        <div class="form-group col-md-4">
                            <label class="control-label">Search Email Address:</label>
                            @Html.TextBox("SearchEmail", null, new { @class = "form-control"})
                        </div>
                        <div class="form-group col-md-4">
                            <label class="control-label">Search Company Name:</label>
                            @Html.TextBox("SearchCompany", null, new { @class = "form-control"})
                        </div>
                        <div class="form-group col-md-4">
                            <label class="control-label">Select Members by Committee:</label>
                            @Html.DropDownList("Committee", null, "All Committees", htmlAttributes: new { @class = "form-control" })
                        </div>
                        <div class="form-group col-md-4 dateboxdiv">
                            <label class="control-label" style="margin-bottom: 8px;">Select Members by Renewal Date:</label>
                            <br />
                            <div class="dateboxes">
                                From
                            </div>
                            <div class="dateboxes">
                                @Html.TextBox("SearchStartDate",null,new { @class = "form-control" , type = "date" })
                            </div>
                            <div class="dateboxes">
                                To
                            </div>
                            <div class="dateboxes">
                                @Html.TextBox("SearchEndDate",null,new { @class = "form-control", type = "date" })
                            </div>
                        </div>
                        <div class="form-group col-md-4 align-self-end filterdiv">
                            <input type="submit" name="actionButton" value="Filter" title="Filter records on current criteria" class="btn btn-outline-primary" />
                            <a asp-action="Index" title="Clear Filters" class="btn btn-outline-dark clearbtn">Clear</a>
                        </div>
                        <p><b>NOTE: To sort records just click on field (table header) by which you want to sort the records</b></p>
                    </div>
                </div>
            </div>
        </div>
        <table class="table tablemargin">
            <thead>
                <tr>
                    <th>
                        <button title="Click to sort records by Member's Name" name="actionButton" value="Name" class="sortfield">Name</button>
                    </th>
                    <th>
                        @Html.DisplayNameFor(model => model.MemberEmail)
                    </th>
                    <th>
                        @Html.DisplayNameFor(model => model.MemberCompany)
                    </th>
                    <th>
                        @Html.DisplayNameFor(model => model.MemberCommitteeEnrolls)
                    </th>
                    <th>
                        Operations
                    </th>
                    <th></th>
                </tr>
            </thead>
            <tbody>
                @foreach (var item in Model)
                {
                    <tr>
                        <td>
                            @Html.DisplayFor(modelItem => item.MemFullName)
                        </td>
                        <td>
                            @Html.DisplayFor(modelItem => item.MemberEmail)
                        </td>
                        <td>
                            @Html.DisplayFor(modelItem => item.MemberCompany)
                        </td>
                        <td>
                            @{
                                // getting number of Committees
                                int numberOfCommittees = item.MemberCommitteeEnrolls.Count;
                                // if there is an Committees
                                if (numberOfCommittees > 0)
                                {
                                    // getting very first Committees
                                    string initialCommittee = item.MemberCommitteeEnrolls.FirstOrDefault().Committee.CommitteeName;
                                    // now for the rest of the Committees
                                    if (numberOfCommittees > 1)
                                    {
                                        // declaring an empty string
                                        string committees = "";
                                        var c = item.MemberCommitteeEnrolls.ToList();
                                        // looping through and adding Committee names in the string
                                        for (int i = 1; i < numberOfCommittees; i++)
                                        {
                                            committees += c[i].Committee.CommitteeName + " <br />";
                                        }
                                        <a class="" role="button" data-bs-toggle="collapse" href="#collapseHistory@(item.MemberID)"
                               aria-expanded="false" aria-controls="collapseHistory@(item.MemberID)">
                                            @initialCommittee <span class="badge bg-info">@numberOfCommittees</span>
                                        </a>
                                        <div class="collapse" id="collapseHistory@(item.MemberID)">
                                            @Html.Raw(committees)
                                        </div>
                                    }
                                    else
                                    {
                                        // if there is just one Committee
                                        @initialCommittee
                                    }
                                }
                            }
                        </td>
                        <td>
                            @if (User.IsInRole("Top Admin") || User.IsInRole("User"))
                            {
                                <a asp-action="Edit" asp-route-id="@item.MemberID">Edit</a> @:|
                                <a asp-action="Details" asp-route-id="@item.MemberID">Details</a>
                            }
                            else if (User.IsInRole("Admin"))
                            {
                                <a asp-action="Details" asp-route-id="@item.MemberID">Details</a>
                            }
                        </td>
                    </tr>
                }
            </tbody>
        </table>
        <partial name="_PagingNavBar" />
    </form>
</div>

